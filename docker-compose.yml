version: '3'
 
services:

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
    profiles: ["all", "exchange"]

  mysql-db:
    image: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: db_banka1
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DB: mysql
#    volumes:
#      - db-user:/var/lib/mysql/data
    profiles: ["all", "exchange"]

  mongo-db:
    image: mongo
    expose:
      - "27017"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: banka1_mongodb
      MONGO_INITDB_ROOT_PASSWORD: banka1_mongodb
    restart: on-failure
    profiles: ["all", "contracts", "mongo"]

  user-service:
    image: harbor.k8s.elab.rs/banka-1/user-service:latest
    build: ./user-service
    environment:
      spring.datasource.hikari.jdbcUrl: jdbc:mysql://mysql-db:3306/db_banka1
    ports:
      - "8080:8080"
    links:
      - mysql-db
    depends_on:
      - mysql-db
    restart: on-failure
    profiles: ["all", "exchange"]

  flask-api-service:
    image: harbor.k8s.elab.rs/banka-1/flask-api-service:latest
    build: ./flask-api-service
    ports:
      - "8888:8888"
    profiles: ["all", "exchange"]

  exchange-service:
    image: harbor.k8s.elab.rs/banka-1/exchange-service:latest
    build: ./exchange-service
    environment:
      spring.datasource.hikari.jdbcUrl: jdbc:mysql://mysql-db:3306/db_banka1
    ports:
      - "8081:8081"
    links:
      - mysql-db
      - flask-api-service
      - rabbitmq
    depends_on:
      - mysql-db
      - flask-api-service
      - rabbitmq
    restart: on-failure
    profiles: [ "all" ]

  contracts-service:
    image: harbor.k8s.elab.rs/banka-1/contracts-service:latest
    build: ./contracts-service
    ports:
      - "8082:8082"
    depends_on:
      - mongo-db
    restart: on-failure
    profiles: ["all", "contracts"]

  db:
    image: mysql
    container_name: mysql_symfony_docker
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - dev

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin_symfony_docker
    restart: always
    depends_on:
      - db
    ports:
      - 8083:80
    environment:
      - PMA_ARBITRARY=1

  www:
    build: php
    container_name: www_symfony_docker
    ports:
      - 8741:80
    volumes:
      - ./php/vhosts:/etc/apache2//sites-enabled
      - ./:/var/www
    networks:
      - dev

networks:
  dev:

volumes:
  mysql-db:
  mongo-db:
  db-data:
